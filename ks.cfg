#version=RHEL7
# System authorization information
auth --enableshadow --passalgo=sha512

# Use CDROM installation media
cdrom

# Use graphical install
#graphical
text

# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=cn --xlayouts='cn'
# System language
lang zh_CN.UTF-8

# Network information
network  --bootproto=static --device=eno1 --gateway=192.168.0.1 --ip=192.168.0.2 --nameserver=114.114.114.114 --netmask=255.255.255.0 --noipv6 --activate
#network  --bootproto=dhcp --device=eno2 --onboot=off --ipv6=auto
network  --hostname=controller1
# Root password
#rootpw --iscrypted $6$PphGKv3xyCcB5jCh$Lb5ToP1uAWJMpF8C8HMHql9YAp15JzySlLBPgYoQ5AvVfPwa419lXDMcKX0wJFTYieeB2TC7A7IQCUAUSw1nr.
rootpw --plaintext password

# System timezone
timezone Asia/Shanghai --isUtc


# System bootloader configuration


# Clear the Master Boot Record
zerombr

# Include partition scheme
%include /tmp/partitioning.txt


#---------<<<安装条件:安装u盘不能大于60G<<<------------#
%pre
#!/bin/bash

#----------<<<获取所有的磁盘&磁盘总数<<<---------#
COUNT=0
for DISK in $(awk '{if ($NF ~ "^(s|h)d|cciss" && $NF !~ "((s|h)d|c.d.)[a-z][0-9]$") print $4}' /proc/partitions); do
    DEVS[${COUNT}]="${DISK}"
    DISKS[${COUNT}]="/dev/${DISK}"
    #echo "${DISK},${DEVS[${COUNT}]}, ${DISKS[${COUNT}]}"
    let COUNT++
done

#---------<<<#获取系统盘符(条件)：排除小于60G盘，剩余盘符中容量最小的一个盘符<<<----#
MIN_CAP=0
MIN_CAP_DEV=""
EXCLUDE_U_DISK_COUNT=0
for((i=0;i<${COUNT};i++));
do
	CURRENT_CAP=`parted -s ${DISKS[$i]} unit mb print free | grep "Disk /dev/" | awk '{print $3}' |cut -d "M" -f1`
	#echo "${CURRENT_CAP}MB"

	if [[ "${MIN_CAP}" -eq 0 ]];then
		MIN_CAP=${CURRENT_CAP}
	fi
	if [[ "${CURRENT_CAP}" -gt 61440 ]] && [[ "${MIN_CAP}" -ge "${CURRENT_CAP}" ]];then
		MIN_CAP=$CURRENT_CAP
		MIN_CAP_DEV=${DEVS[$i]}
	fi
	
	if [[ "${CURRENT_CAP}" -gt 61440 ]];then
		EXCLUDE_U_DISK_DEVLIST[${EXCLUDE_U_DISK_COUNT}]=${DEVS[$i]}
		let EXCLUDE_U_DISK_COUNT++
	fi
done

#-----------<<<打印信息<<<-----------#
if [[ "${MIN_CAP}" -gt 61440 ]];then
	echo "#exclude u disk , the number of ${EXCLUDE_U_DISK_COUNT} devices list: "  > /tmp/partitioning.txt
	for ((i=0;i<${EXCLUDE_U_DISK_COUNT};i++));
	do
		echo "#${EXCLUDE_U_DISK_DEVLIST[$i]}" >>/tmp/partitioning.txt
	done
else 
	echo "#install system disk < 60G, warning: system required disk > 60G!!!"  > /tmp/partitioning.txt
fi

#echo "$MIN_CAP, ${MIN_CAP_DEV}"
#数组元素列表
#echo "${DISKS[1]}, ${DISKS[0]},${DISKS[2]},$COUNT"
#数组总长度
#echo "${#DISKS[*]}"


# Calculate the SWAP size over the amount of RAM
MEM=$(($(sed -n 's/^MemTotal: \+\([0-9]*\) kB/\1/p' /proc/meminfo) / 1024))
if [ "${MEM}" -lt "2048" ]; then
    SWAP=$((MEM * 2))
elif [ "${MEM}" -gt "2048" ] || [ "${MEM}" -le "8192" ]; then
    SWAP=${MEM}
elif [ "${MEM}" -ge "8192" ]; then
    SWAP=16384  #12G
fi

EFI_CAP=200
BOOT_CAP=1024
VAR_CAP=30720
ROOT_CAP=20480
SWAP_CAP=${SWAP}
SYSBACKUP_CAP=512
let TOTAL_CAP=${BOOT_CAP}+${VAR_CAP}+${ROOT_CAP}+${SWAP_CAP}+${SYSBACKUP_CAP}

echo "bootloader --append=\" crashkernel=auto net.ifnames=0\" --location=mbr --boot-drive=${MIN_CAP_DEV}"  >> /tmp/partitioning.txt
echo "ignoredisk --only-use=${MIN_CAP_DEV}"                  >> /tmp/partitioning.txt
echo "clearpart --all --initlabel --drives=${MIN_CAP_DEV}"  >> /tmp/partitioning.txt

#---<<<对efi与BIOS安装方式的区别<<<---#
if [ -d "/sys/firmware/efi" ];then
	echo "part /boot/efi --fstype=\"efi\" --ondisk=${MIN_CAP_DEV} --size=${EFI_CAP} --fsoptions=\"umask=0077,shortname=winnt\"" >> /tmp/partitioning.txt
else
	echo "part biosboot --fstype="biosboot" --ondisk=${MIN_CAP_DEV} --size=1"  >> /tmp/partitioning.txt
fi
echo "part /boot --fstype=\"xfs\"   --size=${BOOT_CAP}" >> /tmp/partitioning.txt
echo "part pv.00 --fstype=\"lvmpv\" --ondisk=${MIN_CAP_DEV} --size=${TOTAL_CAP}" >> /tmp/partitioning.txt

# Define the volume group and logical volumes
cat >> /tmp/partitioning.txt <<EOF
volgroup VG00 pv.00
logvol swap --fstype="swap" --size=${SWAP_CAP} --name=swap --vgname=VG00
logvol /    --fstype="xfs"  --size=${ROOT_CAP} --name=root --vgname=VG00
logvol /sysbackup --fstype="xfs"  --size=${SYSBACKUP_CAP} --name=sysbackup --vgname=VG00
logvol /var --fstype="xfs"  --size=${VAR_CAP} --name=var --vgname=VG00
EOF
%end

%packages
@^infrastructure-server-environment 
@base
@core
chrony
kexec-tools
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'
%end

%post --nochroot --log=/root/ks-post.log
echo "post script" 
cp /run/install/repo/pike_install.tar.gz /mnt/sysimage/root/
%end

reboot
